<?php

if (!defined('BASEPATH')) exit('No direct script access allowed');

class M_data_upload extends CI_Model {
	var $table = 'SRC_DATA_UPLOAD'; //nama tabel dari database
	var $column_order = array(null, 'Tahun','Bulan','Nama','Subsekon_BI_Digit','Kredit','Npl','Kanwil','Kode'); //field yang ada di table user
	var $column_search = array('Tahun','Bulan','Nama','Subsekon_BI_Digit','Kredit','Npl','Kanwil','Kode'); //field yang diizin untuk pencarian 
	var $order = array('Tahun' => 'asc'); // default order 
	
 public function __construct()
	{
		parent::__construct();
		$this->load->database();
	}
	
 function show($table){
		$conn = $this->load->database('default',TRUE);
  	$query = $conn->select()
  					->from($table)
  					->get();
  		return $query->result_array();
  }

  function delete_batch ($id = array(), $cond = null, $bln = null, $tahun = null, $segmen = null, $table = null) {
    $conn = $this->load->database('default',TRUE);
    $query = $conn->select()
                    ->from($table)
            				->where(array('Bulan' => $bln, 'Tahun' => $tahun))
            				->delete($table);
                    
    if ($query) {
        return true;
        
    } else {
        return false;
    }
  }

function insert_query($select, $table, $data = array(),$jml_row){
	$jml_perulangan=floor($jml_row/900);
	$jml_mod=($jml_row%900);
  
	//insert 900 row (note: max insert sqlserver 10000 row)
    for ($i=0; $i < $jml_perulangan; $i++) { 
		$conn       = $this->load->database('default',TRUE);  
		$query_str  = "INSERT INTO ".$table." (".$select.") values ".implode(',',array_slice($data,($i*900),900,true))."" ;
		$rs         = $conn->query($query_str);
    }
	
	//insert sisa
	if($jml_mod >=1){
	$lastRow=($i*900);
		$conn       = $this->load->database('default',TRUE);  
		$query_str  = "INSERT INTO ".$table." (".$select.") values ".implode(',',array_slice($data,$lastRow,$jml_mod,true))."" ;
		$rs         = $conn->query($query_str);
	}
	return $rs;
  }
  
  //here serverside datatable
  private function _get_datatables_query()
	{
		
		$this->db->from($this->table);
		//$this->db->limit(16000);

		$i = 0;
	
		foreach ($this->column_search as $item) // loop column 
		{
			if($_POST['search']['value']) // if datatable send POST for search
			{
				
				if($i===0) // first loop
				{
					$this->db->group_start(); // open bracket. query Where with OR clause better with bracket. because maybe can combine with other WHERE with AND.
					$this->db->like($item, $_POST['search']['value']);
				}
				else
				{
					$this->db->or_like($item, $_POST['search']['value']);
				}

				if(count($this->column_search) - 1 == $i) //last loop
					$this->db->group_end(); //close bracket
			}
			$i++;
		}
		
		if(isset($_POST['order'])) // here order processing
		{
			$this->db->order_by($this->column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
		} 
		else if(isset($this->order))
		{
			$order = $this->order;
			$this->db->order_by(key($order), $order[key($order)]);
		}
	}

	function get_datatables()
	{
		$this->_get_datatables_query();
		if($_POST['length'] != -1)
		$this->db->limit($_POST['length'], $_POST['start']);
		$query = $this->db->get();
		return $query->result();
	}

	function count_filtered()
	{
		$this->_get_datatables_query();
		$query = $this->db->get();
		return $query->num_rows();
	}

	public function count_all()
	{
		$this->db->from($this->table);
		return $this->db->count_all_results();
	}
}
